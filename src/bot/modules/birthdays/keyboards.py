# src/bot/modules/birthdays/keyboards.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from ...common_utils.callbacks import BirthdayAction, PageNavigation, SettingsAction
from ....core import config



def get_birthdays_list_keyboard(birthdays: list[dict], page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    builder = InlineKeyboardBuilder()

    # –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π
    for bday in birthdays:
        year_str = f" ({bday['birth_year']})" if bday['birth_year'] else ""
        date_str = f"{bday['birth_day']:02}.{bday['birth_month']:02}{year_str}"
        builder.button(
            text=f"üéÇ {bday['person_name']} - {date_str}",
            callback_data="ignore_bday_view"
        )
        builder.button(
            text="üóëÔ∏è",
            callback_data=BirthdayAction(action="delete", birthday_id=bday['id'], page=page).pack()
        )
    builder.adjust(2)  # –ö–Ω–æ–ø–∫–∞ —Å –¥–∞—Ç–æ–π –∏ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤ –æ–¥–∏–Ω —Ä—è–¥

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_row = []
    if page > 1:
        pagination_row.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=PageNavigation(target="birthdays", page=page - 1).pack())
        )
    if total_pages > 1:
        pagination_row.append(
            InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="ignore")
        )
    if page < total_pages:
        pagination_row.append(
            InlineKeyboardButton(text="‚û°Ô∏è", callback_data=PageNavigation(target="birthdays", page=page + 1).pack())
        )

    if pagination_row:
        builder.row(*pagination_row)

    return builder.as_markup()


def get_birthdays_menu_keyboard(is_vip: bool, current_count: int) -> InlineKeyboardMarkup:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥ —Å–ø–∏—Å–∫–æ–º –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫—É–ø–∏—Ç—å VIP
    if is_vip or current_count < config.MAX_NOTES_MVP:
        builder.button(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é",
            callback_data=BirthdayAction(action="add_manual").pack()
        )
    else:
        builder.button(
            text=f"‚≠ê –£–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç (>{config.MAX_NOTES_MVP})",
            callback_data=SettingsAction(action="request_vip").pack()
        )

    # –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è VIP
    if is_vip:
        builder.button(
            text="üì• –ò–º–ø–æ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ (VIP)",
            callback_data=BirthdayAction(action="import_file").pack()
        )

    # –ö–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
    builder.button(
        text="üë§ –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å",
        callback_data="user_profile"  # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç.–∫. —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–ª–±—ç–∫
    )

    builder.adjust(1)
    return builder.as_markup()


def get_full_birthdays_keyboard(
        birthdays: list[dict],
        page: int,
        total_pages: int,
        is_vip: bool,
        total_count: int
) -> InlineKeyboardMarkup:
    """–°–æ–±–∏—Ä–∞–µ—Ç –µ–¥–∏–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –º–µ–Ω—é."""
    list_kb = get_birthdays_list_keyboard(birthdays, page, total_pages)
    menu_kb = get_birthdays_menu_keyboard(is_vip, total_count)

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    combined_builder = InlineKeyboardBuilder()
    if birthdays:  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        for row in list_kb.inline_keyboard:
            combined_builder.row(*row)

    for row in menu_kb.inline_keyboard:
        combined_builder.row(*row)

    return combined_builder.as_markup()