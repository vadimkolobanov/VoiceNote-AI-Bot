# src/bot/modules/common/keyboards.py
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from ....core import config
from ...common_utils.callbacks import PageNavigation, SettingsAction, InfoAction


def get_main_menu_keyboard(is_vip: bool = False, has_active_list: bool = False) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    builder = InlineKeyboardBuilder()

    if has_active_list:
        builder.button(
            text="üõí –ú–æ–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫",
            callback_data="show_active_shopping_list"
        )

    if not is_vip:
        builder.button(
            text="üöÄ –ü–æ–ª—É—á–∏—Ç—å VIP –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
            callback_data=SettingsAction(action="get_free_vip").pack()
        )

    builder.button(text="üìù –ú–æ–∏ –∑–∞–º–µ—Ç–∫–∏", callback_data=PageNavigation(target="notes", page=1, archived=False).pack())
    builder.button(text="üí™ –ú–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏", callback_data="habits_menu")
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="user_profile")
    builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data=SettingsAction(action="go_to_main").pack())
    builder.button(text="‚ùì –ü–æ–º–æ—â—å", callback_data=InfoAction(action="main").pack())

    if config.DONATION_URL:
        builder.button(text="‚ù§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="show_donate_info")

    adjust_layout = []
    if has_active_list:
        adjust_layout.append(1)
    if not is_vip:
        adjust_layout.append(1)

    # –û–±–Ω–æ–≤–ª—è–µ–º layout: —Ç–µ–ø–µ—Ä—å —É –Ω–∞—Å 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É (–ó–∞–º–µ—Ç–∫–∏, –ü—Ä–∏–≤—ã—á–∫–∏), –ø–æ—Ç–æ–º 2 (–ü—Ä–æ—Ñ–∏–ª—å, –ù–∞—Å—Ç—Ä–æ–π–∫–∏)
    adjust_layout.extend([2, 2, 1, 1])
    builder.adjust(*adjust_layout)

    return builder.as_markup()


def get_help_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ü–æ–º–æ—â–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üìñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è (–ì–∞–π–¥—ã)", callback_data=InfoAction(action="guides").pack())
    builder.button(text="üí¨ –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ", callback_data="report_problem")

    if config.NEWS_CHANNEL_URL:
        builder.button(text="üì¢ –ù–æ–≤–æ—Å—Ç–∏ –±–æ—Ç–∞", url=config.NEWS_CHANNEL_URL)
    if config.CHAT_URL:
        builder.button(text="üí¨ –ß–∞—Ç –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π", url=config.CHAT_URL)

    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_to_main_menu")

    layout = [2]
    if config.NEWS_CHANNEL_URL and config.CHAT_URL:
        layout.append(2)
    elif config.NEWS_CHANNEL_URL or config.CHAT_URL:
        layout.append(1)
    layout.append(1)
    builder.adjust(*layout)

    return builder.as_markup()


def get_guides_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–∞–π–¥–æ–≤."""
    builder = InlineKeyboardBuilder()

    guides = {
        "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É?": "create_note",
        "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫?": "shopping_list",
        "–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–ø–∏—Å–∫–æ–º/–∑–∞–º–µ—Ç–∫–æ–π?": "share_note",
        "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è?": "add_birthday",
        "üí™ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç—Ä–µ–∫–µ—Ä–æ–º –ø—Ä–∏–≤—ã—á–µ–∫?": "habit_tracker",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ —É—Ç—Ä–µ–Ω–Ω—è—è —Å–≤–æ–¥–∫–∞? (VIP)": "daily_digest",
        "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å?": "set_timezone",
    }

    for text, topic in guides.items():
        builder.button(text=text, callback_data=InfoAction(action="guide_topic", guide_topic=topic).pack())

    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –ü–æ–º–æ—â—å", callback_data=InfoAction(action="main").pack())

    builder.adjust(1)
    return builder.as_markup()


def get_back_to_guides_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –≥–∞–π–¥–æ–≤."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –≥–∞–π–¥–æ–≤", callback_data=InfoAction(action="guides").pack())
    return builder.as_markup()


def get_donation_keyboard() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å (–ÆMoney)", url=config.DONATION_URL)
    builder.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="go_to_main_menu")
    builder.adjust(1)
    return builder.as_markup()