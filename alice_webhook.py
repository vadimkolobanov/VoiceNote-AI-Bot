# alice_webhook.py
import logging
import secrets
import string
import os
import asyncio
from datetime import datetime, timedelta
from fastapi import FastAPI
from pydantic import BaseModel
from aiogram import Bot
from dotenv import load_dotenv

import database_setup as db
from services.note_creator import process_and_save_note

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
app = FastAPI(docs_url=None, redoc_url=None)


# --- –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –ê–ª–∏—Å—ã ---

class AliceRequest(BaseModel):
    """
    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç API –Ø–Ω–¥–µ–∫—Å.–î–∏–∞–ª–æ–≥–æ–≤.
    """

    class Session(BaseModel):
        new: bool

        class User(BaseModel):
            user_id: str

        user: User

    class Request(BaseModel):
        original_utterance: str
        type: str

    request: Request
    session: Session


class AliceResponse(BaseModel):
    """
    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –æ–∂–∏–¥–∞–µ—Ç API –Ø–Ω–¥–µ–∫—Å.–î–∏–∞–ª–æ–≥–æ–≤.
    """

    class Response(BaseModel):
        text: str
        end_session: bool = True

    response: Response
    version: str = "1.0"


# --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —É—Ç–∏–ª–∏—Ç—ã ---

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ aiogram-–±–æ—Ç–∞
bot_instance: Bot | None = None


def set_bot_instance(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –≤–µ–±—Ö—É–∫–µ.
    –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ FastAPI.
    """
    global bot_instance
    bot_instance = bot


async def process_note_in_background(user: dict, utterance: str):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç "—Ç—è–∂–µ–ª—É—é" –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∑–∞–º–µ—Ç–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ,
    —á—Ç–æ–±—ã –Ω–µ –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è API –ê–ª–∏—Å—ã.
    """
    logger.info(f"Background task started for user {user['telegram_id']}")
    try:
        if not bot_instance:
            logger.error("Bot instance is not set in background task!")
            return

        # –í—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
        success, message, new_note = await process_and_save_note(
            bot=bot_instance,
            telegram_id=user['telegram_id'],
            text_to_process=utterance
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram
        if success and new_note:
            await bot_instance.send_message(
                user['telegram_id'],
                f"üéôÔ∏è –ó–∞–º–µ—Ç–∫–∞ –∏–∑ –ê–ª–∏—Å—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:\n\n`{new_note['corrected_text']}`",
                parse_mode="Markdown"
            )
        else:
            await bot_instance.send_message(
                user['telegram_id'],
                f"üòî –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –∏–∑ –ê–ª–∏—Å—ã.\n–ü—Ä–∏—á–∏–Ω–∞: {message}"
            )
    except Exception as e:
        logger.error(f"Error in background note processing for user {user['telegram_id']}: {e}", exc_info=True)
        if bot_instance:
            await bot_instance.send_message(
                user['telegram_id'],
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –∑–∞–º–µ—Ç–∫–∏ –∏–∑ –ê–ª–∏—Å—ã."
            )


def generate_activation_code(length=6):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –±—É–∫–≤–µ–Ω–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏."""
    alphabet = string.ascii_uppercase + string.digits
    return ''.join(secrets.choice(alphabet) for _ in range(length))


async def get_link_code_for_user(telegram_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –ë–î –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    code = generate_activation_code()
    expires_at = datetime.now() + timedelta(minutes=10)
    await db.set_alice_activation_code(telegram_id, code, expires_at)
    return code


# --- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ ---

@app.post("/alice_webhook")
async def handle_alice_request(request: AliceRequest):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –Ø–Ω–¥–µ–∫—Å.–î–∏–∞–ª–æ–≥–æ–≤.
    """
    alice_user_id = request.session.user.user_id
    # –û—á–∏—â–∞–µ–º —Ñ—Ä–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    utterance = request.request.original_utterance.lower().strip("?!.,")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –Ω–∞–≤—ã–∫–∞ –≤ —Å–µ—Å—Å–∏–∏
    if request.session.new:
        user = await db.find_user_by_alice_id(alice_user_id)
        if user:
            welcome_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≥–æ—Ç–æ–≤–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–ª—è –≤–∞—Å –∑–∞–º–µ—Ç–∫–∏. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ø–æ–ø—Ä–æ—Å–∏ VoiceNote –Ω–∞–ø–æ–º–Ω–∏—Ç—å –º–Ω–µ –∫—É–ø–∏—Ç—å —Ö–ª–µ–±."
        else:
            welcome_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß—Ç–æ–±—ã —è –º–æ–≥–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à Telegram-–∞–∫–∫–∞—É–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –≤ –±–æ—Ç–µ –∏ —Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥, –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –µ–≥–æ."
        # –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é, —á—Ç–æ–±—ã –¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–∑—É –æ—Ç–≤–µ—Ç–∏—Ç—å
        return AliceResponse(response={"text": welcome_text, "end_session": False})

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –ø–æ–º–æ—â–∏
    help_commands = ["–ø–æ–º–æ—â—å", "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "—Å–ø—Ä–∞–≤–∫–∞", "—Ö–µ–ª–ø", "—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å"]
    if utterance in help_commands:
        help_text = "–Ø —É–º–µ—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–ª—è –≤–∞—Å –∑–∞–º–µ—Ç–∫–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ø–æ–ø—Ä–æ—Å–∏ VoiceNote –Ω–∞–ø–æ–º–Ω–∏—Ç—å –º–Ω–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ –≤ —Å–µ–º—å –≤–µ—á–µ—Ä–∞. –í—Å—è –º–∞–≥–∏—è –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ –≤–∞—à–µ–º Telegram-–±–æ—Ç–µ. –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –≤ –±–æ—Ç–µ –∏ —Å–∫–∞–∂–∏—Ç–µ: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥, –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –µ–≥–æ."
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
        return AliceResponse(response={"text": help_text, "end_session": True})

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ –∫–æ–¥—É
    if utterance.startswith("–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"):
        code = utterance.replace("–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥", "").strip().upper()
        if not code:
            return AliceResponse(response={"text": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–æ–≤–∏—Ç–µ –∫–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é.", "end_session": False})

        user_to_link = await db.find_user_by_alice_code(code)
        if not user_to_link:
            return AliceResponse(
                response={"text": "–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∏—Å—Ç—ë–∫. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –≤ Telegram.", "end_session": True})

        await db.link_alice_user(user_to_link['telegram_id'], alice_user_id)
        if bot_instance:
            await bot_instance.send_message(user_to_link['telegram_id'],
                                            "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –Ø–Ω–¥–µ–∫—Å.–ê–ª–∏—Å–µ!")
        return AliceResponse(
            response={"text": "–û—Ç–ª–∏—á–Ω–æ! –ê–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏.", "end_session": True})

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user = await db.find_user_by_alice_id(alice_user_id)
    if not user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π
        return AliceResponse(response={
            "text": "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç. –°–∫–∞–∂–∏—Ç–µ '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥' –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram-–±–æ—Ç–∞.",
            "end_session": False})

    if not bot_instance:
        logger.error("Bot instance is not configured in webhook handler!")
        return AliceResponse(response={"text": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."})

    # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∑–∞–º–µ—Ç–∫—É
    asyncio.create_task(
        process_note_in_background(user, request.request.original_utterance)
    )

    # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –ê–ª–∏—Å–µ, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
    return AliceResponse(response={"text": "–ü—Ä–∏–Ω—è–ª–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª—é –≤ Telegram."})